# Default values for kaa.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
global:
  image:
    pullSecrets: []
  kaa:
    host: ""
    username: ""
    password: ""
    secretName: ""
    agentAppToken: ""
    applicationTokens: ""
  kafka:
    urls: ""
    host: ""
    port: ""
    topicsJob:
      seedCompleteTopic: ""
  flume:
    host: ""
    port: ""
  zookeeper:
    host: ""
  cassandra:
    urls: ""
    host: ""
    port: ""
    seedJob:
      seedCompleteTable: ""
  postgresql:
    urls: ""
    host: ""
    port: ""
    database: ""
    secretName: ""
    postgresqlPassword: ""
    postgresqlUsername: ""
    postgresqlDatabase: ""
    webapp:
      urlDatasource: "jdbc:postgresql://{{ .Release.Name }}-{{ default \"postgresql\" }}/{{ .Values.global.postgresql.webapp.postgresqlDatabase }}"
      postgresqlDatabase: "jbtc"
    kaa:
      urlDatasource: "jdbc:postgresql://{{ .Release.Name }}-{{ default \"postgresql\" }}/{{ .Values.global.postgresql.kaa.postgresqlDatabase }}"
      postgresqlDatabase: "kaa"

labels:
  app.kubernetes.io/runtime: java

replicaCount: 1

metadata:
  partOf: jbt
  component: kaa

aws:
  accessKey: ""
  secretKey: ""
  region: us-east-1

nameOverride: ""
fullnameOverride: ""

kaa:
  eip: ""
  applicationId: "1"
  kafkaHost: ""
  kafkaPort: ""
  flumeHost: ""
  flumePort: ""
  username: ""
  password: ""
  secretName: ""
  config:
    adminDao:
      hibernateDialect: "org.hibernate.dialect.PostgreSQL82Dialect"
      hibernateFormatSql: "False"
      hibernateShowSql: "False"
      hibernateHbm2DdlAuto: "none"
      jdbcDriverClassname: "org.postgresql.Driver"
      jdbcUsername: "postgres"
      jdbcPassword: "jbtpass"
#      jdbcUrl: "jdbc:postgresql://172.17.0.1:5432/kaa"
    bootstrapHttpTransport:
#      bindInterface: '${transport_bind_interface}'
      bindPort: "9889"
      publicInterface: "172.17.0.1"
      publicPorts: "9889"
      maxBodySize: "524288"
    bootstrapTcpTransport:
#      bindInterface: '${transport_bind_interface}'
      bindPort: "9888"
      publicInterface: "172.17.0.1"
      publicPorts: "9888"
    commonDaoCassandra:
      clusterName: "Kaa Cluster"
      keyspaceName: "kaa"
#      nodeList: "172.17.0.1:9042"
      useSsl: "False"
      useJmx: "true"
      compression: "none"
      disableMetrics: "false"
      useCredentials: "false"
      username: ""
      password: ""
      socketConnectTimeout: "5000"
      socketReadTimeout: "12000"
      socketKeepAlive: "true"
      socketReuseAddress: "true"
      socketSoLinger: ""
      socketTcpNoDelay: "false"
      socketReceiveBufferSize: ""
      socketSendBufferSize: ""
      queryConsistencyLevel: "ONE"
      queryDefaultFetchSize: "2000"
      batchType: "LOGGED"
      readConsistencyLevel: "ONE"
      writeConsistencyLevel: "ONE"
    kaaNode:
      controlServerEnabled: "true"
      bootstrapServerEnabled: "true"
      operationsServerEnabled: "true"
      thriftHost: "localhost"
      thriftPort: "9090"
      adminPort: "7777"
      zkEnabled: "true"
#      zkHostPortList: "172.17.0.1:2181"
      zkMaxRetryTime: "3000"
      zkSleepTime: "1000"
      zkIgnoreErrors: "true"
      loadmgmtMinDiff: "10000"
      loadmgmtMaxInitRedirectProbability: "0.75"
      loadmgmtMaxSessionRedirectProbability: "0.0"
      recalculationPeriod: "10"
      userHashPartitions: "10"
      maxNumberNeighborConnections: "3"
      opsServerHistoryTtl: "3600"
      workerThreadPool: "8"
      bootstrapKeysPrivateKeyLocation: "/keys/bootstrap-private.key"
      bootstrapKeysPublicKeyLocation: "/keys/bootstrap-public.key"
      operationsKeysPrivateKeyLocation: "/keys/operations-private.key"
      operationsKeysPublicKeyLocation: "/keys/operations-public.key"
      supportUnencryptedConnection: "true"
      transportBindInterface: "0.0.0.0"
      transportPublicInterface: "172.17.0.1"
      metricsEnabled: "true"
      logsRootDir: "/kaa_log_uploads"
      datePattern: "'.'yyyy-MM-dd-HH-mm"
      layoutPattern: "%m%n"
      tmpKeys: "/home/kaa/tmp_keys"
      loadStatsUpdateFrequency: "10000"
      additionalPluginsScanPackage: ""
    nosqlDao:
      nosqlDbProviderName: "cassandra"
    operationsHttpTransport:
#      bindInterface: "${transport_bind_interface}"
      bindPort: "9999"
      publicInterface: "172.17.0.1"
      publicPorts: "9999"
      maxBodySize: "524288"
    operationsTcpTransport:
#      bindInterface: "${transport_bind_interface}"
      bindPort: "9997"
      publicInterface: "172.17.0.1"
      publicPorts: "9997"
    sqlDao:
      dbName: "kaa"
      daoMaxWaitTime: "5"
      hibernateDialect: "org.hibernate.dialect.PostgreSQL82Dialect"
      hibernateFormatSql: "False"
      hibernateShowSql: "False"
      hibernateHbm2DdlAuto: "none"
      jdbcDriverClassname: "org.postgresql.Driver"
      jdbcUsername: "postgres"
      jdbcPassword: "jbtpass"
#      jdbcHostPort: "172.17.0.1:5432"
      sqlProviderName: "postgresql"
  servers:
    bootstrap:
      keys:
        privateB64: MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCCYSzrv6FGl+L5nlFMYIUFUYnJrDmNWSy8tuEJ/mE9WO/Mh7peIkwiWBMLjtAjkvDoil8hEA6h7kqs8Rn0uB+p4PRRqnfLuiZROrNKmfRoQyOS76BLkS3Bn5mECla4fD1G7DJnBn40J4HFwRAKJkA+Jg4Xw5723FQ1jh3tMIaApgbbLJx+0YFNZV1fBaAhGkxHx9AcPLpTNC2yq3SOfMkHrnfzwm/CA8cvUM0ADHZyB6C+w6U8zOvFfSbVrhh29VNHdJ6s3B1r6o6iis1Y1Gjr8s0Ym8/UqXqc6PDM4sgpGyKptg0ycN2MdVT0zUnk1z0hcdqjPYZGJ9vNknFIu+zBAgMBAAECggEAPAzX7Mk5VdNVJlVl6oC2I8n3ZZzecRz2fwDYS4sPbHsPD6wgCYVQfa0FMJiZgxkFvoUk5YyIwMqJOHhf1RgM9Wh3/zk9rebSCS25MI4SRQdPVjjqIoP+iCSjR26fnJ8UdhsJ5+vUqt7bZaLTaWlOw5Exgn6GM/stCfGoFPv5pzynl5auPLeQGKsGHQb70BJZOzH/vf1FhhdW8Jle27MdGzScmm/H8JUXzUT3WjaxhowtcCbYIICEKECnBi31Yf6XoP5O9+cuzr5z3oVh/T3AbcBV6lfdO4TmzCtehnYF5SxkzBwrusluj6j8t5FsgF1DkwBk7ieoUvQBBLtgp41zwQKBgQDNCmEdc+grIL01A+04zcInDOMgWXFJFDczCP2JktEgmikqWiP/gWlGjTNinC5appi5wqjIFJ7913HGqxFMoOBfqkvjT3w4GmpZMf7pbQYxdHWl94LW+EB0jg2g7k/B4WP4vYvIfZLCefVa+Zk/uMZgCslFtAPJZXPZmj9m9w2faQKBgQCiyIYJvx5AWczmOpHadq70aJqn+bWS69DcTR1fLDMCJV3RKnrs2kVmiLdXUJKnr/CyNodEH0tYMv0F/TJawCRBLS0TEuSTVTRvGjdDIeQrGwoEZMlbE5qKrw/fHZNEeEraTF2hgZ+zCN6JbLzYwUQmIiaNF+VFaKJm90ROM6yPmQKBgDEajj1ud6h0c7uRkCstY5TUikRCB1ZYCAwp2AYtafXj1X32Dm7vQBYMVMUF4DgHc8Xw71jTT2w9P1sztrXiRTnD3961N2t8MAHibkjaukP3vwEbMHNpCo6fQnZK/EDTSIzWX/aI1C/M40yBQAk5qBByJNeTj+CYclEnlo2DFvkZAoGAUx/Goo9/qSiyIxbhiAd3C8OmxgQTnnTg8L5IM2NkoMHoCHmC0BQdwGAsD2BLo2mKpdaGeFjqpp1S644B+qmHWejxzX2mTz4BSoK+mX9i/kgOc3PsBqAaGJuQpUR7AUnUH2lDnseMf2YWDWMDhEQcwsRJn18Gas0lsSKvNKfahHECgYEAmJH8XE5UjchWys9/1Gy+ctm2zY2Rp+JRs7ykaLjdsrmNaznpMmfUB4Z9pkfh0kQUZXFdmbzMGpwk5L4JRcR473tZX8RECtY/vyAgJWPblVI/cm44WJ0JuP9Czw0xZmmHvzgdS+EqCU727RKxhhjiNszFVPQKdFKskzyDf37xFV8=
        publicB64: MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAgmEs67+hRpfi+Z5RTGCFBVGJyaw5jVksvLbhCf5hPVjvzIe6XiJMIlgTC47QI5Lw6IpfIRAOoe5KrPEZ9LgfqeD0Uap3y7omUTqzSpn0aEMjku+gS5EtwZ+ZhApWuHw9RuwyZwZ+NCeBxcEQCiZAPiYOF8Oe9txUNY4d7TCGgKYG2yycftGBTWVdXwWgIRpMR8fQHDy6UzQtsqt0jnzJB65388JvwgPHL1DNAAx2cgegvsOlPMzrxX0m1a4YdvVTR3SerNwda+qOoorNWNRo6/LNGJvP1Kl6nOjwzOLIKRsiqbYNMnDdjHVU9M1J5Nc9IXHaoz2GRifbzZJxSLvswQIDAQAB
    operations:
      keys:
        privateB64: MIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQC9nZUOLl+8LjLOVH2xx8DpIAAiP3XzJ8k+gHX86L4bYWz+AYOsz2Xy6QWMBkWUofm0CMlTF1Nflh78hPcPVT5csN1MZBg+z8xQ0QVeMclcrRYxic4aFEzv9getVqE83jFBuzLZanl3dhjPyAij8pWQDDy+a5TF9cF6iLYI/xR0KqqqEjKeDfvOw9DIBnGDUHSdyNo8DFq4OW+3NPGBaQUlJ+UacmIUF3Bf3IvCOiDM+BwGvN6CUQ/n8AYLQle0Id53R99o3mJYDtZWEe9n2CHkfJdoF2x0dz1JAVrDprsC8Ypv0kkdpPXyyAlmA/Kj2JjtTvESAep0Gk0UpFQHADudAgMBAAECggEAEgoa8zVwQDv4825QYwiJDuTPfnKhKxf+6mZYU05lP7+eGfBU8aztmxWWRIMYPZLHadxoIvKWKQLkQcv4oUnP3Aurkif3soocexfXteVwrdN9yAq/Q/Xod+/lPRV/04WkFAfWR578nWPr6mCyib57gi/X25nqlobR+HFnOCXkcUSvuDnBpfqjMOnGav9+uG2rva9bw4frrDCLHHFijXSEgSn7qVNbwtN+9wsoVBVvW5rRDPKv+A7IcYCHh9VtRShSrLQPmWqP7MdUATGh7MYVZZlzAWoE97a8EnQ6ZAdu3VdS5/alQ3vLR7CQjCN8Sqy92mrEsp/onAtO4NFIIV+ZlQKBgQD2El6Fwzmh7irHb5+qzm9mRliK54OxjIgjcIyhIQyoux+L5qvUWewn8xtQuezKWYKASzwe+VuAADPUTxaaqsf4QwvZjSGA/+cf0VEorx4TOIr18kzDgVvV/lAu+JwX9ffjZM7IQd2CdO4u3P2+VKhUEsmsmClq+fCT9zXs1YnXTwKBgQDFRBZNkZxCFPLmae/h2XI7aMLmt7QCofkt2ikS4JVvG+DQ9RQRjwGI8lqxMGKL/V4tlQAygmZpVuw7PucqmQgeFWkNOrMYJL1MUdr3e4IWZ1dj1jy0dPzIWK5DJRcU/1YGKfL9DifTQuW1t8nfJbfSlMcUYVmTjogJqqqD0z6DUwKBgA3fpUKnaiVuFy1dZsQrlW5Pwwg521v0T2yoGNWw1lThD/tESyXS2BS8iSq5ANe7yjbPhxk79+O0nzd2KhEYVePya8WdRmlOhEpv88J2dRyiUHtjaN6Q+YuMJhsv2yUishI5CcuSoxmK3C76OLg1b7QlxwcbISKt6tl806aBt57TAoGAME92btTEQeLDge5b0yHfufD0GnDO4v4r+jC9cmQR9L4NFt+OZKZzJ8jCsTY6TDJmyB7/h18sGYwyGmhTULldpZB0w8qmZblJqtE5IPbcawQwAMFM6Jzl82LUepkwx/GobaYEXjkDQ9fUTeaOx9mC5U2OW81jlKGJa2SikdpAKwUCgYBhplhxwCg1j59zMZXGimdR+EHFUBtO/rFlo5y7s9F2Stvgy8OebumWniXf067bhyeSiXWe8PkIct4QJvrauI15ZBgsCgpLfTwRf8cEn9KstC4z9vYUPw5PMwKIjbaIM5DmQSpBDnqIdSXg9vtC0LOYJawG1q/bRVb0roZrdsh52w==
        publicB64: MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvZ2VDi5fvC4yzlR9scfA6SAAIj918yfJPoB1/Oi+G2Fs/gGDrM9l8ukFjAZFlKH5tAjJUxdTX5Ye/IT3D1U+XLDdTGQYPs/MUNEFXjHJXK0WMYnOGhRM7/YHrVahPN4xQbsy2Wp5d3YYz8gIo/KVkAw8vmuUxfXBeoi2CP8UdCqqqhIyng37zsPQyAZxg1B0ncjaPAxauDlvtzTxgWkFJSflGnJiFBdwX9yLwjogzPgcBrzeglEP5/AGC0JXtCHed0ffaN5iWA7WVhHvZ9gh5HyXaBdsdHc9SQFaw6a7AvGKb9JJHaT18sgJZgPyo9iY7U7xEgHqdBpNFKRUBwA7nQIDAQAB

logAppenderJob:
  image:
    repository: 138150065595.dkr.ecr.us-east-1.amazonaws.com/jbt-kaa-appender-cfg
    tag: master-0aad2fdb
    pullPolicy: IfNotPresent
  javaOpts: -Xms64M -Xmx64M

waitContainers:
  enabled: true

statefulset:
  updateStrategy: OnDelete

image:
  repository: 138150065595.dkr.ecr.us-east-1.amazonaws.com/kaa
  tag: ""
  pullPolicy: IfNotPresent

appender:
  image:
    repository: 138150065595.dkr.ecr.us-east-1.amazonaws.com/jbt-kaa-appender-cfg
    tag: master-02b18c54
    pullPolicy: IfNotPresent

service:
  type: ClusterIP
  port:

serviceJmx:
  type: ClusterIP
  port: 7091

serviceThrift:
  type: ClusterIP
  port: 9090

serviceServers:
  type: LoadBalancer

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  paths: []
  hosts:
    - chart-example.local
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  requests:
    cpu: 1
    memory: 2Gi
  limits:
    cpu: 2
    memory: 4Gi

nodeSelector: {}

tolerations: []

affinity: {}

livenessProbe:
  httpGet:
    path: /
    port: admin
  initialDelaySeconds: 20
  # periodSeconds: 30
  # timeoutSeconds: 30
  # failureThreshold: 6
  # successThreshold: 1

readinessProbe:
  httpGet:
    path: /
    port: admin
  initialDelaySeconds: 20
  # periodSeconds: 30
  # timeoutSeconds: 30
  # failureThreshold: 6
  # successThreshold: 1

# ------------------------------------------------------------------------------
# Zookeeper:
# ------------------------------------------------------------------------------
zookeeper:
  ## If true, install the Zookeeper chart alongside Kafka
  ## ref: https://github.com/kubernetes/charts/tree/master/incubator/zookeeper
  enabled: true

  ## Configure Zookeeper resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  resources: ~

  ## Environmental variables to set in Zookeeper
  env:
    ## The JVM heap size to allocate to Zookeeper
    ZK_HEAP_SIZE: "1G"

  persistence:
    enabled: false
    ## The amount of PV storage allocated to each Zookeeper pod in the statefulset
    # size: "2Gi"

  ## Specify a Zookeeper imagePullPolicy
  ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
  image:
    PullPolicy: "IfNotPresent"

  ## If the Zookeeper Chart is disabled a URL and port are required to connect
  url: ""
  port: 2181

  ## Pod scheduling preferences (by default keep pods within a release on separate nodes).
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## By default we don't set affinity:
  affinity: {}  # Criteria by which pod label-values influence scheduling for zookeeper pods.
  # podAntiAffinity:
  #   requiredDuringSchedulingIgnoredDuringExecution:
  #     - topologyKey: "kubernetes.io/hostname"
  #       labelSelector:
  #         matchLabels:
  #           release: zookeeper
